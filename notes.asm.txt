@@ transition from Opt to UnOpt, exec_trace: false
@@ src_rbp: 0x7fffffffdd40, reg_store: 0x7fffffffdc50, src_frame_size: 0x80, dst_frame_size: 0x80
[Thread 0x7ffff6e4a6c0 (LWP 2893366) exited]
Register2Indirect - src: Register(15, 8, []) dst: Indirect(6, -88, 8)
Register2Register - src: Register(14, 8, []) dst: Register(15, 8, [])
Register2Register - src: Register(12, 8, []) dst: Register(14, 8, [])
Register2Register - src: Register(13, 8, []) dst: Register(12, 8, [])
Indirect2Indirect - src: Indirect(6, -88, 8) dst: Indirect(6, -80, 8)
Indirect2Register - src: Indirect(6, -80, 8) dst: Register(13, 8, [])
Indirect2Indirect - src: Indirect(6, -72, 8) dst: Indirect(6, -72, 8)
Indirect2Indirect - src: Indirect(6, -64, 8) dst: Indirect(6, -64, 8) <------ shl

Thread 1 "simple_binop" received signal SIGTRAP, Trace/breakpoint trap.


─── CP transition ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 0x00007ffff7fba001> ? movabs rbp,0x7fffffffdd40
 0x00007ffff7fba00b  ? movabs rsp,0x7fffffffdd40
 0x00007ffff7fba015  ? sub    rsp,0x80
 0x00007ffff7fba01c  ? mov    rax,QWORD PTR [rbp-0x58]
 0x00007ffff7fba023  ? mov    QWORD PTR ds:0x2082a0,rax
 0x00007ffff7fba02b  ? mov    rax,QWORD PTR [rbp-0x50]
 0x00007ffff7fba032  ? mov    QWORD PTR ds:0x2082a8,rax
 0x00007ffff7fba03a  ? mov    rax,QWORD PTR [rbp-0x48]
 0x00007ffff7fba041  ? mov    QWORD PTR ds:0x2082b0,rax
 0x00007ffff7fba049  ? mov    rax,QWORD PTR [rbp-0x40]
 0x00007ffff7fba050  ? mov    QWORD PTR ds:0x2082b8,rax
 0x00007ffff7fba058  ? mov    rax,QWORD PTR [rbp-0xf0]
 0x00007ffff7fba05f  ? mov    QWORD PTR [rbp-0x58],rax
 0x00007ffff7fba066  ? mov    r15,QWORD PTR [rbp-0xe8]
 0x00007ffff7fba06d  ? mov    r14,QWORD PTR [rbp-0xd8]
 0x00007ffff7fba074  ? mov    r12,QWORD PTR [rbp-0xe0]
 0x00007ffff7fba07b  ? mov    rax,QWORD PTR ds:0x2082a0
 0x00007ffff7fba083  ? mov    QWORD PTR [rbp-0x50],rax
 0x00007ffff7fba08a  ? mov    r13,QWORD PTR ds:0x2082a8
 0x00007ffff7fba092  ? mov    rax,QWORD PTR ds:0x2082b0
 0x00007ffff7fba09a  ? mov    QWORD PTR [rbp-0x48],rax
 0x00007ffff7fba0a1  ? mov    rax,QWORD PTR ds:0x2082b8
 0x00007ffff7fba0a9  ? mov    QWORD PTR [rbp-0x40],rax
 0x00007ffff7fba0b0  ? mov    rax,QWORD PTR [rbp-0x90]
 0x00007ffff7fba0b7  ? mov    rcx,QWORD PTR [rbp-0x98]
 0x00007ffff7fba0be  ? mov    rdi,QWORD PTR [rbp-0xa8]
 0x00007ffff7fba0c5  ? mov    rsi,QWORD PTR [rbp-0xb0]
 0x00007ffff7fba0cc  ? mov    r8,QWORD PTR [rbp-0xb8]
 0x00007ffff7fba0d3  ? mov    r9,QWORD PTR [rbp-0xc0]
 0x00007ffff7fba0da  ? mov    r10,QWORD PTR [rbp-0xc8]
 0x00007ffff7fba0e1  ? mov    r11,QWORD PTR [rbp-0xd0]
 0x00007ffff7fba0e8  ? sub    rsp,0x10
 0x00007ffff7fba0ec  ? mov    QWORD PTR [rsp],rax
 0x00007ffff7fba0f0  ? movabs rax,0x205381
 0x00007ffff7fba0fa  ? mov    QWORD PTR [rsp+0x8],rax
 0x00007ffff7fba0ff  ? pop    rax



 ─── After CP transition ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 >>> info reg
rax            0x2                 2
rbx            0x7ffff6e4b024      140737335570468
rcx            0x7ffff6e4b030      140737335570480
rdx            0x20a810            2140176
rsi            0x9                 9
rdi            0x7fffffffdb30      140737488345904
rbp            0x7fffffffdd40      0x7fffffffdd40
rsp            0x7fffffffdcc0      0x7fffffffdcc0
r8             0x0                 0
r9             0x1c0               448
r10            0x7ffff7201e10      140737339465232
r11            0xd                 13
r12            0x7ffff6e4b030      140737335570480
r13            0x7ffff6e4b038      140737335570488
r14            0x7ffff6e4b02c      140737335570476
r15            0x7ffff6e4b020      140737335570464
rip            0x2053bb            0x2053bb <main+475>

>>> x/gx $rbp -96
0x7fffffffdce0:	0x00007ffff6e4b030

Note: $rbp -96 and r12 have the same value

 0x000000000020539e> main+446 mov    eax,DWORD PTR [r15] <----- loading "i" variable
 0x00000000002053a1  main+449 or     eax,0x1
 0x00000000002053a4  main+452 mov    rcx,QWORD PTR [rbp-0x60] <---- loading the "or" variable
 0x00000000002053a8  main+456 mov    DWORD PTR [rcx],eax <---- storing the "or" variable
 0x00000000002053aa  main+458 mov    eax,DWORD PTR [r15]
 0x00000000002053ad  main+461 shr    eax,1
 0x00000000002053af  main+463 mov    DWORD PTR [r14],eax
 0x00000000002053b2  main+466 mov    eax,DWORD PTR [r15]
 0x00000000002053b5  main+469 sar    eax,1
 0x00000000002053b7  main+471 mov    DWORD PTR [r12],eax
 0x00000000002053bb  main+475 mov    rdi,QWORD PTR ds:0x207840
 0x00000000002053c3  main+483 mov    edx,DWORD PTR [rbx]
 0x00000000002053c5  main+485 mov    ecx,DWORD PTR [rcx]
 0x00000000002053c7  main+487 mov    r8d,DWORD PTR [r14]
 0x00000000002053ca  main+490 mov    r9d,DWORD PTR [r12]
 0x00000000002053ce  main+494 movabs rsi,0x204714
 0x00000000002053d8  main+504 mov    al,0x0
 0x00000000002053da  main+506 call   0x2055c0 <fprintf@plt>
 0x00000000002053df  main+511 jmp    0x2053e1 <main+513>
 0x00000000002053e1  main+513 mov    edi,0xb
 0x00000000002053e6  main+518 mov    esi,0xa
 0x00000000002053eb  main+523 call   0x205570 <__yk_trace_basicblock@plt>
 0x00000000002053f0  main+528 xor    eax,eax
 0x00000000002053f2  main+530 sub    eax,DWORD PTR [r15]
 0x00000000002053f5  main+533 sar    eax,1
 0x00000000002053f7  main+535 mov    rcx,QWORD PTR [rbp-0x50]
 0x00000000002053fb  main+539 mov    DWORD PTR [rcx],eax
 0x00000000002053fd  main+541 mov    eax,DWORD PTR [r15]
 0x0000000000205400  main+544 xor    eax,0x1
 0x0000000000205403  main+547 mov    DWORD PTR [r13+0x0],eax
 0x0000000000205407  main+551 mov    eax,DWORD PTR [r15]
 0x000000000020540a  main+554 xor    eax,0xffffffff
 0x000000000020540d  main+557 mov    r8,QWORD PTR [rbp-0x48]
 0x0000000000205411  main+561 mov    DWORD PTR [r8],eax
 0x0000000000205414  main+564 mov    eax,DWORD PTR [r15] <--------------------------
 0x0000000000205417  main+567 shl    eax,1 
 0x0000000000205419  main+569 mov    rsi,QWORD PTR [rbp-0x40] <
 0x000000000020541d  main+573 mov    DWORD PTR [rsi],eax
 0x000000000020541f  main+575 mov    rdi,QWORD PTR ds:0x207840
 0x0000000000205427  main+583 mov    edx,DWORD PTR [rcx]
 0x0000000000205429  main+585 mov    ecx,DWORD PTR [r13+0x0]
 0x000000000020542d  main+589 mov    r8d,DWORD PTR [r8]
 0x0000000000205430  main+592 mov    r9d,DWORD PTR [rsi]
 0x0000000000205433  main+595 movabs rsi,0x204738
 0x000000000020543d  main+605 mov    al,0x0
 0x000000000020543f  main+607 call   0x2055c0 <fprintf@plt>
 0x0000000000205444  main+612 jmp    0x205446 <main+614>
 0x0000000000205446  main+614 mov    edi,0xb
 0x000000000020544b  main+619 mov    esi,0xb
 0x0000000000205450  main+624 call   0x205570 <__yk_trace_basicblock@plt>
 0x0000000000205455  main+629 mov    eax,DWORD PTR [r15]
 0x0000000000205458  main+632 add    eax,0xffffffff
 0x000000000020545b  main+635 mov    DWORD PTR [r15],eax
 0x000000000020545e  main+638 jmp    0x205317 <main+311>
 0x0000000000205463  main+643 mov    edi,0xb
 0x0000000000205468  main+648 mov    esi,0xc
 0x000000000020546d  main+653 call   0x205570 <__yk_trace_basicblock@plt>
 0x0000000000205472  main+658 mov    rdi,QWORD PTR ds:0x207840
 0x000000000020547a  main+666 movabs rsi,0x204732
 0x0000000000205484  main+676 mov    al,0x0
 0x0000000000205486  main+678 call   0x2055c0 <fprintf@plt>
 0x000000000020548b  main+683 jmp    0x20548d <main+685>
 0x000000000020548d  main+685 mov    edi,0xb
 0x0000000000205492  main+690 mov    esi,0xd
 0x0000000000205497  main+695 call   0x205570 <__yk_trace_basicblock@plt>
 0x000000000020549c  main+700 mov    rdi,QWORD PTR [rbp-0x30]
 0x00000000002054a0  main+704 call   0x205560 <yk_location_drop@plt>
 0x00000000002054a5  main+709 jmp    0x2054a7 <main+711>
 0x00000000002054a7  main+711 mov    edi,0xb
 0x00000000002054ac  main+716 mov    esi,0xe
 0x00000000002054b1  main+721 call   0x205570 <__yk_trace_basicblock@plt>
 0x00000000002054b6  main+726 mov    rdi,QWORD PTR [rbp-0x38]
 0x00000000002054ba  main+730 call   0x205540 <yk_mt_shutdown@plt>
 0x00000000002054bf  main+735 jmp    0x2054c1 <main+737>
 0x00000000002054c1  main+737 mov    edi,0xb
 0x00000000002054c6  main+742 mov    esi,0xf
 0x00000000002054cb  main+747 call   0x205570 <__yk_trace_basicblock@plt>
 0x00000000002054d0  main+752 jmp    0x2054f2 <main+786>
 0x00000000002054d2  main+754 mov    edi,0xb
 0x00000000002054d7  main+759 mov    esi,0x10
 0x00000000002054dc  main+764 call   0x205570 <__yk_trace_basicblock@plt>
 0x00000000002054e1  main+769 xor    eax,eax
 0x00000000002054e3  main+771 add    rsp,0x58
 0x00000000002054e7  main+775 pop    rbx
 0x00000000002054e8  main+776 pop    r12
 0x00000000002054ea  main+778 pop    r13
 0x00000000002054ec  main+780 pop    r14
 0x00000000002054ee  main+782 pop    r15
 0x00000000002054f0  main+784 pop    rbp
 0x00000000002054f1  main+785 ret
 0x00000000002054f2  main+786 mov    edi,0xb
 0x00000000002054f7  main+791 mov    esi,0x11
 0x00000000002054fc  main+796 call   0x205570 <__yk_trace_basicblock@plt>
 0x0000000000205501  main+801 jmp    0x2054d2 <main+754>
