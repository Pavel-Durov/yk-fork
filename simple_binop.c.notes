debugigng notes of tests/c/simple_binop.c

@@ transition from Opt to UnOpt, exec_trace: false
@@ src_rbp: 0x7fffffffdd40, reg_store: 0x7fffffffdc50, src_frame_size: 0x80, dst_frame_size: 0x80
    Register2Indirect - src: Register(15, 8, []) dst: Indirect(6, -88, 8)
Register2Register - src: Register(14, 8, []) dst: Register(15, 8, [])
Register2Register - src: Register(12, 8, []) dst: Register(14, 8, [])
Register2Register - src: Register(13, 8, []) dst: Register(12, 8, [])
    Indirect2Indirect - src: Indirect(6, -88, 8) dst: Indirect(6, -80, 8)
Indirect2Register - src: Indirect(6, -80, 8) dst: Register(13, 8, [])
    Indirect2Indirect - src: Indirect(6, -72, 8) dst: Indirect(6, -72, 8)
    Indirect2Indirect - src: Indirect(6, -64, 8) dst: Indirect(6, -64, 8)

─── Assembly ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 0x00007ffff7fba001> ? movabs rbp,0x7fffffffdd40
 0x00007ffff7fba00b  ? movabs rsp,0x7fffffffdd40
 0x00007ffff7fba015  ? sub    rsp,0x80
 0x00007ffff7fba01c  ? movabs rcx,0x208a80
 0x00007ffff7fba026  ? mov    rax,QWORD PTR [rbp-0x58]
 0x00007ffff7fba02d  ? mov    QWORD PTR [rcx+0x0],rax
 0x00007ffff7fba034  ? movabs rcx,0x208a80
 0x00007ffff7fba03e  ? mov    rax,QWORD PTR [rbp-0x50]
 0x00007ffff7fba045  ? mov    QWORD PTR [rcx+0x8],rax
 0x00007ffff7fba04c  ? movabs rcx,0x208a80
 0x00007ffff7fba056  ? mov    rax,QWORD PTR [rbp-0x48]
 0x00007ffff7fba05d  ? mov    QWORD PTR [rcx+0x10],rax
 0x00007ffff7fba064  ? movabs rcx,0x208a80
 0x00007ffff7fba06e  ? mov    rax,QWORD PTR [rbp-0x40]
 0x00007ffff7fba075  ? mov    QWORD PTR [rcx+0x18],rax
 0x00007ffff7fba07c  ? mov    rax,QWORD PTR [rbp-0xf0]
 0x00007ffff7fba083  ? mov    QWORD PTR [rbp-0x58],rax
 0x00007ffff7fba08a  ? mov    r15,QWORD PTR [rbp-0xe8]
 0x00007ffff7fba091  ? mov    r14,QWORD PTR [rbp-0xd8]
 0x00007ffff7fba098  ? mov    r12,QWORD PTR [rbp-0xe0]
 0x00007ffff7fba09f  ? movabs rcx,0x208a80
 0x00007ffff7fba0a9  ? mov    rax,QWORD PTR [rcx+0x0]
 0x00007ffff7fba0b0  ? mov    QWORD PTR [rbp-0x50],rax
 0x00007ffff7fba0b7  ? mov    rcx,0x208a80
 0x00007ffff7fba0be  ? mov    r13,QWORD PTR [rcx+0x8]
 0x00007ffff7fba0c5  ? movabs rcx,0x208a80
 0x00007ffff7fba0cf  ? mov    rax,QWORD PTR [rcx+0x10]
 0x00007ffff7fba0d6  ? mov    QWORD PTR [rbp-0x48],rax
 0x00007ffff7fba0dd  ? movabs rcx,0x208a80
 0x00007ffff7fba0e7  ? mov    rax,QWORD PTR [rcx+0x18]
 0x00007ffff7fba0ee  ? mov    QWORD PTR [rbp-0x40],rax
 0x00007ffff7fba0f5  ? mov    rax,QWORD PTR [rbp-0x90]
 0x00007ffff7fba0fc  ? mov    rcx,QWORD PTR [rbp-0x98]
 0x00007ffff7fba103  ? mov    rdi,QWORD PTR [rbp-0xa8]
 0x00007ffff7fba10a  ? mov    rsi,QWORD PTR [rbp-0xb0]
 0x00007ffff7fba111  ? mov    r8,QWORD PTR [rbp-0xb8]
 0x00007ffff7fba118  ? mov    r9,QWORD PTR [rbp-0xc0]
 0x00007ffff7fba11f  ? mov    r10,QWORD PTR [rbp-0xc8]
 0x00007ffff7fba126  ? mov    r11,QWORD PTR [rbp-0xd0]
 0x00007ffff7fba12d  ? int3
 0x00007ffff7fba12e  ? movabs rdi,0x208a80
 0x00007ffff7fba138  ? movabs rsi,0x7fffffffcdb0
 0x00007ffff7fba142  ? movabs rax,0x7ffff796fe80
 0x00007ffff7fba14c  ? call   rax
 0x00007ffff7fba14e  ? sub    rsp,0x10
 0x00007ffff7fba152  ? mov    QWORD PTR [rsp],rax
 0x00007ffff7fba156  ? movabs rax,0x205381
 0x00007ffff7fba160  ? mov    QWORD PTR [rsp+0x8],rax
 0x00007ffff7fba165  ? pop    rax
 0x00007ffff7fba166  ? ret


   0x000000000020537e <+414>:	call   r11 <------------------------------ yk_control_point_call
   0x0000000000205381 <+417>:	mov    r15,QWORD PTR [rbp-0x58] <----------------------------------Indirect(6, -88, 8) - i
   0x0000000000205385 <+421>:	jmp    0x205387 <main+423>
   0x0000000000205387 <+423>:	mov    edi,0xb
   0x000000000020538c <+428>:	mov    esi,0x9
   0x0000000000205391 <+433>:	call   0x205570 <__yk_trace_basicblock@plt>
   0x0000000000205396 <+438>:	mov    eax,DWORD PTR [r15]
   0x0000000000205399 <+441>:	and    eax,0x1
   0x000000000020539c <+444>:	mov    DWORD PTR [rbx],eax <-------------------- and
   0x000000000020539e <+446>:	mov    eax,DWORD PTR [r15]
   0x00000000002053a1 <+449>:	or     eax,0x1
   0x00000000002053a4 <+452>:	mov    rcx,QWORD PTR [rbp-0x60] <-------------------------------- or - This should be an indirect
   0x00000000002053a8 <+456>:	mov    DWORD PTR [rcx],eax
   0x00000000002053aa <+458>:	mov    eax,DWORD PTR [r15]
   0x00000000002053ad <+461>:	shr    eax,1
   0x00000000002053af <+463>:	mov    DWORD PTR [r14],eax <----------------------------- lshr - Register(14, 8, [])
   0x00000000002053b2 <+466>:	mov    eax,DWORD PTR [r15]
   0x00000000002053b5 <+469>:	sar    eax,1
   0x00000000002053b7 <+471>:	mov    DWORD PTR [r12],eax   <-------------- ashr - Register(12, 8, [])
=> 0x00000000002053bb <+475>:	mov    rdi,QWORD PTR ds:0x207840
   0x00000000002053c3 <+483>:	mov    edx,DWORD PTR [rbx]
   0x00000000002053c5 <+485>:	mov    ecx,DWORD PTR [rcx]
   0x00000000002053c7 <+487>:	mov    r8d,DWORD PTR [r14]
   0x00000000002053ca <+490>:	mov    r9d,DWORD PTR [r12]
   0x00000000002053ce <+494>:	movabs rsi,0x204714
   0x00000000002053d8 <+504>:	mov    al,0x0
   0x00000000002053da <+506>:	call   0x2055c0 <fprintf@plt>
   0x00000000002053df <+511>:	jmp    0x2053e1 <main+513>
   0x00000000002053e1 <+513>:	mov    edi,0xb
   0x00000000002053e6 <+518>:	mov    esi,0xa
   0x00000000002053eb <+523>:	call   0x205570 <__yk_trace_basicblock@plt>
   0x00000000002053f0 <+528>:	xor    eax,eax
   0x00000000002053f2 <+530>:	sub    eax,DWORD PTR [r15]
   0x00000000002053f5 <+533>:	sar    eax,1
   0x00000000002053f7 <+535>:	mov    rcx,QWORD PTR [rbp-0x50] <------------- ashr2 - Indirect(6, -80, 8)
   0x00000000002053fb <+539>:	mov    DWORD PTR [rcx],eax
   0x00000000002053fd <+541>:	mov    eax,DWORD PTR [r15]
   0x0000000000205400 <+544>:	xor    eax,0x1
   0x0000000000205403 <+547>:	mov    DWORD PTR [r13+0x0],eax <-------------- xor - Register(13, 8, [])
   0x0000000000205407 <+551>:	mov    eax,DWORD PTR [r15]
   0x000000000020540a <+554>:	xor    eax,0xffffffff
   0x000000000020540d <+557>:	mov    r8,QWORD PTR [rbp-0x48] <-------------- xor2 - Indirect(6, -72, 8)
   0x0000000000205411 <+561>:	mov    DWORD PTR [r8],eax
   0x0000000000205414 <+564>:	mov    eax,DWORD PTR [r15]
   0x0000000000205417 <+567>:	shl    eax,1
   0x0000000000205419 <+569>:	mov    rsi,QWORD PTR [rbp-0x40] <------------- shl - Indirect(6, -64, 8)
   0x000000000020541d <+573>:	mov    DWORD PTR [rsi],eax
   0x000000000020541f <+575>:	mov    rdi,QWORD PTR ds:0x207840
   0x0000000000205427 <+583>:	mov    edx,DWORD PTR [rcx]
   0x0000000000205429 <+585>:	mov    ecx,DWORD PTR [r13+0x0]
   0x000000000020542d <+589>:	mov    r8d,DWORD PTR [r8]
   0x0000000000205430 <+592>:	mov    r9d,DWORD PTR [rsi]
   0x0000000000205433 <+595>:	movabs rsi,0x204738
   0x000000000020543d <+605>:	mov    al,0x0
   0x000000000020543f <+607>:	call   0x2055c0 <fprintf@plt>
   0x0000000000205444 <+612>:	jmp    0x205446 <main+614>
   0x0000000000205446 <+614>:	mov    edi,0xb
   0x000000000020544b <+619>:	mov    esi,0xb
   0x0000000000205450 <+624>:	call   0x205570 <__yk_trace_basicblock@plt>
   0x0000000000205455 <+629>:	mov    eax,DWORD PTR [r15]
   0x0000000000205458 <+632>:	add    eax,0xffffffff
   0x000000000020545b <+635>:	mov    DWORD PTR [r15],eax
   0x000000000020545e <+638>:	jmp    0x205317 <main+311>
   0x0000000000205463 <+643>:	mov    edi,0xb
   0x0000000000205468 <+648>:	mov    esi,0xc
   0x000000000020546d <+653>:	call   0x205570 <__yk_trace_basicblock@plt>
   0x0000000000205472 <+658>:	mov    rdi,QWORD PTR ds:0x207840
   0x000000000020547a <+666>:	movabs rsi,0x204732
   0x0000000000205484 <+676>:	mov    al,0x0
   0x0000000000205486 <+678>:	call   0x2055c0 <fprintf@plt>
   0x000000000020548b <+683>:	jmp    0x20548d <main+685>
   0x000000000020548d <+685>:	mov    edi,0xb
   0x0000000000205492 <+690>:	mov    esi,0xd
   0x0000000000205497 <+695>:	call   0x205570 <__yk_trace_basicblock@plt>
   0x000000000020549c <+700>:	mov    rdi,QWORD PTR [rbp-0x30]
   0x00000000002054a0 <+704>:	call   0x205560 <yk_location_drop@plt>
   0x00000000002054a5 <+709>:	jmp    0x2054a7 <main+711>
   0x00000000002054a7 <+711>:	mov    edi,0xb
   0x00000000002054ac <+716>:	mov    esi,0xe
   0x00000000002054b1 <+721>:	call   0x205570 <__yk_trace_basicblock@plt>
   0x00000000002054b6 <+726>:	mov    rdi,QWORD PTR [rbp-0x38]
   0x00000000002054ba <+730>:	call   0x205540 <yk_mt_shutdown@plt>
   0x00000000002054bf <+735>:	jmp    0x2054c1 <main+737>
   0x00000000002054c1 <+737>:	mov    edi,0xb
   0x00000000002054c6 <+742>:	mov    esi,0xf
   0x00000000002054cb <+747>:	call   0x205570 <__yk_trace_basicblock@plt>
   0x00000000002054d0 <+752>:	jmp    0x2054f2 <main+786>
   0x00000000002054d2 <+754>:	mov    edi,0xb
   0x00000000002054d7 <+759>:	mov    esi,0x10
   0x00000000002054dc <+764>:	call   0x205570 <__yk_trace_basicblock@plt>
   0x00000000002054e1 <+769>:	xor    eax,eax
   0x00000000002054e3 <+771>:	add    rsp,0x58
   0x00000000002054e7 <+775>:	pop    rbx
   0x00000000002054e8 <+776>:	pop    r12
   0x00000000002054ea <+778>:	pop    r13
   0x00000000002054ec <+780>:	pop    r14
   0x00000000002054ee <+782>:	pop    r15
   0x00000000002054f0 <+784>:	pop    rbp
   0x00000000002054f1 <+785>:	ret
   0x00000000002054f2 <+786>:	mov    edi,0xb
   0x00000000002054f7 <+791>:	mov    esi,0x11
   0x00000000002054fc <+796>:	call   0x205570 <__yk_trace_basicblock@plt>
