CP_VERBOSE_ASM=1 CP_VERBOSE=1  YK_BUILD_TYPE=debug YKB_TRACER=swt   /home/pd/yklua-fork/src/lua ~/yklua-fork/examples/loop.small.lua
Using buffer at 0x301c990 for direction OptToUnopt
Buffer population complete. Variables mapping: {19: 152, 8: 64, 25: 200, 5: 40, 33: 264, 20: 160, 6: 48, 3: 24, 24: 192, 0: 0, 30: 240, 12: 96, 34: 272, 27: 216, 18: 144, 9: 72, 21: 168, 7: 56, 14: 112, 10: 80, 2: 16, 11: 88, 28: 224, 31: 248, 15: 120, 32: 256, 35: 280, 16: 128, 13: 104, 29: 232, 23: 184, 4: 32, 22: 176, 26: 208, 1: 8, 17: 136}
Transition: OptToUnopt ExecTrace: false
src_rbp: 0x7ffe3b931650, reg_store: 0x7ffe3b930db0, src_frame_size: 0x830, dst_frame_size: 0x830, rbp_offset_reg_store: 0x8a0
Source live vars values:
Indirect(6, -296, 8)	value=0x00000000030152a8
Indirect(6, -56, 8)	value=0x00007fba4b32a340
Indirect(6, -56, 8)	value=0x00007fba4b32a340
Indirect(6, -160, 8)	value=0x00007fba4b32a350
Register(10, 8, [-104])	value=0x00007fba4b32a360
Indirect(6, -280, 8)	value=0x00007fba4b32a370
Register(2, 8, [-72])	value=0x00007fba4b32a380
Indirect(6, -360, 8)	value=0x00007fba4b32a390
Indirect(6, -272, 8)	value=0x00007fba4b32a3a0
Indirect(6, -240, 8)	value=0x00007fba4b32a3b0
Indirect(6, -200, 8)	value=0x00007fba4b32a3c0
Indirect(6, -176, 8)	value=0x00007fba4b32a3d0
Indirect(6, -152, 8)	value=0x00007fba4b32a3e0
Indirect(6, -168, 8)	value=0x00007fba4b32a3f0
Indirect(6, -336, 8)	value=0x00007fba4b32a400
Indirect(6, -328, 8)	value=0x0000000003015368
Indirect(6, -136, 8)	value=0x00000000030152c0
Indirect(6, -288, 8)	value=0x000000000301535c
Register(0, 8, [-64])	value=0x00000000030152b8
Indirect(6, -144, 8)	value=0x00007fba4b32a3c8
Indirect(6, -128, 8)	value=0x00007fba4b32a3b8
Indirect(6, -232, 8)	value=0x00007fba4b32a3a8
Indirect(6, -224, 8)	value=0x00007fba4b32a3e8
Indirect(6, -400, 8)	value=0x00007fba4b32a3d8
Indirect(6, -184, 8)	value=0x00000000030152c8
Indirect(6, -304, 8)	value=0x00007fba4b32a408
Indirect(6, -192, 8)	value=0x00007fba4b32a3f8
Indirect(6, -216, 8)	value=0x00007fba4b32a348
Indirect(6, -376, 8)	value=0x00007fba4b32a358
Indirect(6, -320, 8)	value=0x00007fba4b32a368
Register(9, 8, [-88])	value=0x00007fba4b32a378
Register(8, 8, [-112])	value=0x00007fba4b32a388
Indirect(6, -384, 8)	value=0x00007fba4b32a398
Indirect(6, -352, 8)	value=0x0000000003016fc0
Indirect(6, -392, 8)	value=0x0000000003017e10
Indirect(6, -80, 8)	value=0x0000000003017e28
Register(12, 8, [-344])	value=0x0000000000000000
Register(3, 8, [-256])	value=0x000000000301d880
Indirect(6, -208, 8)	value=0x0000000003016fe0
Register(13, 8, [-312])	value=0x0000000003017e30
Indirect(6, -248, 8)	value=0x0000000003016fe8
Register(14, 8, [-264])	value=0x0000000003016fc8
Indirect(6, -368, 8)	value=0x0000000003016ffe
Register(15, 8, [])	value=0x0000000003015980
Indirect(6, -632, 8)	value=0x000000000301d9a8
Indirect(6, -44, 4)	value=0x0000000000000000
Copying live vars: src=46, dst=46
Copying live src: Indirect(6, -296, 8), dst: Indirect(6, -296, 8)
Copying live src: Indirect(6, -56, 8), dst: Indirect(6, -56, 8)
Copying live src: Indirect(6, -56, 8), dst: Indirect(6, -56, 8)
Copying live src: Indirect(6, -160, 8), dst: Indirect(6, -160, 8)
Copying live src: Register(10, 8, [-104]), dst: Register(10, 8, [-104])
Copying live src: Indirect(6, -280, 8), dst: Indirect(6, -280, 8)
Copying live src: Register(2, 8, [-72]), dst: Register(2, 8, [-72])
Copying live src: Indirect(6, -360, 8), dst: Indirect(6, -360, 8)
Copying live src: Indirect(6, -272, 8), dst: Indirect(6, -272, 8)
Copying live src: Indirect(6, -240, 8), dst: Indirect(6, -240, 8)
Copying live src: Indirect(6, -200, 8), dst: Indirect(6, -200, 8)
Copying live src: Indirect(6, -176, 8), dst: Indirect(6, -176, 8)
Copying live src: Indirect(6, -152, 8), dst: Indirect(6, -152, 8)
Copying live src: Indirect(6, -168, 8), dst: Indirect(6, -168, 8)
Copying live src: Indirect(6, -336, 8), dst: Indirect(6, -336, 8)
Copying live src: Indirect(6, -328, 8), dst: Indirect(6, -328, 8)
Copying live src: Indirect(6, -136, 8), dst: Indirect(6, -136, 8)
Copying live src: Indirect(6, -288, 8), dst: Indirect(6, -288, 8)
Copying live src: Register(0, 8, [-64]), dst: Register(0, 8, [-64])
Copying live src: Indirect(6, -144, 8), dst: Indirect(6, -144, 8)
Copying live src: Indirect(6, -128, 8), dst: Indirect(6, -128, 8)
Copying live src: Indirect(6, -232, 8), dst: Indirect(6, -232, 8)
Copying live src: Indirect(6, -224, 8), dst: Indirect(6, -224, 8)
Copying live src: Indirect(6, -400, 8), dst: Indirect(6, -400, 8)
Copying live src: Indirect(6, -184, 8), dst: Indirect(6, -184, 8)
Copying live src: Indirect(6, -304, 8), dst: Indirect(6, -304, 8)
Copying live src: Indirect(6, -192, 8), dst: Indirect(6, -192, 8)
Copying live src: Indirect(6, -216, 8), dst: Indirect(6, -216, 8)
Copying live src: Indirect(6, -376, 8), dst: Indirect(6, -376, 8)
Copying live src: Indirect(6, -320, 8), dst: Indirect(6, -320, 8)
Copying live src: Register(9, 8, [-88]), dst: Register(9, 8, [-88])
Copying live src: Register(8, 8, [-112]), dst: Register(8, 8, [-112])
Copying live src: Indirect(6, -384, 8), dst: Indirect(6, -384, 8)
Copying live src: Indirect(6, -352, 8), dst: Indirect(6, -352, 8)
Copying live src: Indirect(6, -392, 8), dst: Indirect(6, -392, 8)
Copying live src: Indirect(6, -80, 8), dst: Indirect(6, -80, 8)
Copying live src: Register(12, 8, [-344]), dst: Register(12, 8, [-344])
Copying live src: Register(3, 8, [-256]), dst: Register(3, 8, [-256])
Copying live src: Indirect(6, -208, 8), dst: Indirect(6, -208, 8)
Copying live src: Register(13, 8, [-312]), dst: Register(13, 8, [-312])
Copying live src: Indirect(6, -248, 8), dst: Indirect(6, -248, 8)
Copying live src: Register(14, 8, [-264]), dst: Register(14, 8, [-264])
Copying live src: Indirect(6, -368, 8), dst: Indirect(6, -368, 8)
Copying live src: Register(15, 8, []), dst: Register(15, 8, [])
Copying live src: Indirect(6, -632, 8), dst: Indirect(6, -632, 8)
Copying live src: Indirect(6, -44, 4), dst: Indirect(6, -44, 4)
Used temp registers: [RestoreTempRegisters { src_location: Register(2, 8, [-72]), dst_location: Register(2, 8, [-72]), src_var_indirect_index: 5 }, RestoreTempRegisters { src_location: Register(0, 8, [-64]), dst_location: Register(0, 8, [-64]), src_var_indirect_index: 16 }]
Restoring unused register to __ykrt_control_point save point: "rdi"
Restoring unused register to __ykrt_control_point save point: "rsi"
Restoring unused register to __ykrt_control_point save point: "r11"
transition.src_rsp: 0x0, current_rsp: 0x7ffe3b930e20
ASM DUMP:
  0: movabs rbp, 0x7ffe3b931650
  a: movabs rsp, 0x7ffe3b931650
  14: sub rsp, 0x830
  1b: movabs rax, 0x301c990
>>> x/gx $rax
0xad1990:	0x0000000000000000
  25: mov rcx, qword ptr [rbp - 0x128]
  2c: mov qword ptr [rax + riz], rcx
  34: mov rcx, qword ptr [rbp - 0x38]
  3b: mov qword ptr [rax + riz + 8], rcx
  43: mov rcx, qword ptr [rbp - 0x38]
  4a: mov qword ptr [rax + riz + 0x10], rcx
  52: mov rcx, qword ptr [rbp - 0xa0]
  59: mov qword ptr [rax + riz + 0x18], rcx
  61: mov rcx, qword ptr [rbp - 0x118]
  68: mov qword ptr [rax + riz + 0x20], rcx
  70: mov rcx, qword ptr [rbp - 0x168]
  77: mov qword ptr [rax + riz + 0x28], rcx
  7f: mov rcx, qword ptr [rbp - 0x110]
  86: mov qword ptr [rax + riz + 0x30], rcx
  8e: mov rcx, qword ptr [rbp - 0xf0]
  95: mov qword ptr [rax + riz + 0x38], rcx
  9d: mov rcx, qword ptr [rbp - 0xc8]
  a4: mov qword ptr [rax + riz + 0x40], rcx
  ac: mov rcx, qword ptr [rbp - 0xb0]
  b3: mov qword ptr [rax + riz + 0x48], rcx
  bb: mov rcx, qword ptr [rbp - 0x98]
  c2: mov qword ptr [rax + riz + 0x50], rcx
  ca: mov rcx, qword ptr [rbp - 0xa8]
  d1: mov qword ptr [rax + riz + 0x58], rcx
  d9: mov rcx, qword ptr [rbp - 0x150]
  e0: mov qword ptr [rax + riz + 0x60], rcx
  e8: mov rcx, qword ptr [rbp - 0x148]
  ef: mov qword ptr [rax + riz + 0x68], rcx
  f7: mov rcx, qword ptr [rbp - 0x88]
  fe: mov qword ptr [rax + riz + 0x70], rcx
  106: mov rcx, qword ptr [rbp - 0x120]
  10d: mov qword ptr [rax + riz + 0x78], rcx
  115: mov rcx, qword ptr [rbp - 0x90]
  11c: mov qword ptr [rax + riz + 0x80], rcx
  124: mov rcx, qword ptr [rbp - 0x80]
  12b: mov qword ptr [rax + riz + 0x88], rcx
  133: mov rcx, qword ptr [rbp - 0xe8]
  13a: mov qword ptr [rax + riz + 0x90], rcx
  142: mov rcx, qword ptr [rbp - 0xe0]
  149: mov qword ptr [rax + riz + 0x98], rcx
  151: mov rcx, qword ptr [rbp - 0x190]
  158: mov qword ptr [rax + riz + 0xa0], rcx
  160: mov rcx, qword ptr [rbp - 0xb8]
  167: mov qword ptr [rax + riz + 0xa8], rcx
  16f: mov rcx, qword ptr [rbp - 0x130]
  176: mov qword ptr [rax + riz + 0xb0], rcx
  17e: mov rcx, qword ptr [rbp - 0xc0]
  185: mov qword ptr [rax + riz + 0xb8], rcx
  18d: mov rcx, qword ptr [rbp - 0xd8]
  194: mov qword ptr [rax + riz + 0xc0], rcx
  19c: mov rcx, qword ptr [rbp - 0x178]
  1a3: mov qword ptr [rax + riz + 0xc8], rcx
  1ab: mov rcx, qword ptr [rbp - 0x140]
  1b2: mov qword ptr [rax + riz + 0xd0], rcx
  1ba: mov rcx, qword ptr [rbp - 0x180]
  1c1: mov qword ptr [rax + riz + 0xd8], rcx
  1c9: mov rcx, qword ptr [rbp - 0x160]
  1d0: mov qword ptr [rax + riz + 0xe0], rcx
  1d8: mov rcx, qword ptr [rbp - 0x188]
  1df: mov qword ptr [rax + riz + 0xe8], rcx
  1e7: mov rcx, qword ptr [rbp - 0x50]
  1ee: mov qword ptr [rax + riz + 0xf0], rcx
  1f6: mov rcx, qword ptr [rbp - 0xd0]
  1fd: mov qword ptr [rax + riz + 0xf8], rcx
  205: mov rcx, qword ptr [rbp - 0xf8]
  20c: mov qword ptr [rax + riz + 0x100], rcx
  214: mov rcx, qword ptr [rbp - 0x170]
  21b: mov qword ptr [rax + riz + 0x108], rcx
  223: mov rcx, qword ptr [rbp - 0x278]
  22a: mov qword ptr [rax + riz + 0x110], rcx

>>> x/gx $rbp-0x2c
0x7fffffffdb74:	0x00aca2a800000000
>>> p 0x2c

  232: mov ecx, dword ptr [rbp - 0x2c]

>>> p/x $ecx
$6 = 0x0

  239: mov dword ptr [rax + riz + 0x118], ecx

>>> x/gx $rax + 0x118
0xad1aa8:	0x0000000000000000

  241: movabs rax, 0x301c990
  24b: mov rcx, qword ptr [rax + riz]
  253: mov qword ptr [rbp - 0x128], rcx
  25a: movabs rax, 0x301c990
  264: mov rcx, qword ptr [rax + riz + 8]
  26c: mov qword ptr [rbp - 0x38], rcx
  273: movabs rax, 0x301c990
  27d: mov rcx, qword ptr [rax + riz + 0x10]
  285: mov qword ptr [rbp - 0x38], rcx
  28c: movabs rax, 0x301c990
  296: mov rcx, qword ptr [rax + riz + 0x18]
  29e: mov qword ptr [rbp - 0xa0], rcx
  2a5: mov rax, qword ptr [rbp - 0x878]
  2ac: mov qword ptr [rbp - 0x68], rax
  2b3: mov r10, qword ptr [rbp - 0x878]
  2ba: movabs rax, 0x301c990
  2c4: mov rcx, qword ptr [rax + riz + 0x20]
  2cc: mov qword ptr [rbp - 0x118], rcx
  2d3: movabs rax, 0x301c990
  2dd: mov rcx, qword ptr [rax + riz + 0x28]
  2e5: mov qword ptr [rbp - 0x168], rcx
  2ec: movabs rax, 0x301c990
  2f6: mov rcx, qword ptr [rax + riz + 0x30]
  2fe: mov qword ptr [rbp - 0x110], rcx
  305: movabs rax, 0x301c990
  30f: mov rcx, qword ptr [rax + riz + 0x38]
  317: mov qword ptr [rbp - 0xf0], rcx
  31e: movabs rax, 0x301c990
  328: mov rcx, qword ptr [rax + riz + 0x40]
  330: mov qword ptr [rbp - 0xc8], rcx
  337: movabs rax, 0x301c990
  341: mov rcx, qword ptr [rax + riz + 0x48]
  349: mov qword ptr [rbp - 0xb0], rcx
  350: movabs rax, 0x301c990
  35a: mov rcx, qword ptr [rax + riz + 0x50]
  362: mov qword ptr [rbp - 0x98], rcx
  369: movabs rax, 0x301c990
  373: mov rcx, qword ptr [rax + riz + 0x58]
  37b: mov qword ptr [rbp - 0xa8], rcx
  382: movabs rax, 0x301c990
  38c: mov rcx, qword ptr [rax + riz + 0x60]
  394: mov qword ptr [rbp - 0x150], rcx
  39b: movabs rax, 0x301c990
  3a5: mov rcx, qword ptr [rax + riz + 0x68]
  3ad: mov qword ptr [rbp - 0x148], rcx
  3b4: movabs rax, 0x301c990
  3be: mov rcx, qword ptr [rax + riz + 0x70]
  3c6: mov qword ptr [rbp - 0x88], rcx
  3cd: movabs rax, 0x301c990
  3d7: mov rcx, qword ptr [rax + riz + 0x78]
  3df: mov qword ptr [rbp - 0x120], rcx
  3e6: movabs rax, 0x301c990
  3f0: mov rcx, qword ptr [rax + riz + 0x80]
  3f8: mov qword ptr [rbp - 0x90], rcx
  3ff: movabs rax, 0x301c990
  409: mov rcx, qword ptr [rax + riz + 0x88]
  411: mov qword ptr [rbp - 0x80], rcx
  418: movabs rax, 0x301c990
  422: mov rcx, qword ptr [rax + riz + 0x90]
  42a: mov qword ptr [rbp - 0xe8], rcx
  431: movabs rax, 0x301c990
  43b: mov rcx, qword ptr [rax + riz + 0x98]
  443: mov qword ptr [rbp - 0xe0], rcx
  44a: movabs rax, 0x301c990
  454: mov rcx, qword ptr [rax + riz + 0xa0]
  45c: mov qword ptr [rbp - 0x190], rcx
  463: movabs rax, 0x301c990
  46d: mov rcx, qword ptr [rax + riz + 0xa8]
  475: mov qword ptr [rbp - 0xb8], rcx
  47c: movabs rax, 0x301c990
  486: mov rcx, qword ptr [rax + riz + 0xb0]
  48e: mov qword ptr [rbp - 0x130], rcx
  495: movabs rax, 0x301c990
  49f: mov rcx, qword ptr [rax + riz + 0xb8]
  4a7: mov qword ptr [rbp - 0xc0], rcx
  4ae: movabs rax, 0x301c990
  4b8: mov rcx, qword ptr [rax + riz + 0xc0]
  4c0: mov qword ptr [rbp - 0xd8], rcx
  4c7: movabs rax, 0x301c990
  4d1: mov rcx, qword ptr [rax + riz + 0xc8]
  4d9: mov qword ptr [rbp - 0x178], rcx
  4e0: movabs rax, 0x301c990
  4ea: mov rcx, qword ptr [rax + riz + 0xd0]
  4f2: mov qword ptr [rbp - 0x140], rcx
  4f9: mov rax, qword ptr [rbp - 0x870]
  500: mov qword ptr [rbp - 0x58], rax
  507: mov r9, qword ptr [rbp - 0x870]
  50e: mov rax, qword ptr [rbp - 0x868]
  515: mov qword ptr [rbp - 0x70], rax
  51c: mov r8, qword ptr [rbp - 0x868]
  523: movabs rax, 0x301c990
  52d: mov rcx, qword ptr [rax + riz + 0xd8]
  535: mov qword ptr [rbp - 0x180], rcx
  53c: movabs rax, 0x301c990
  546: mov rcx, qword ptr [rax + riz + 0xe0]
  54e: mov qword ptr [rbp - 0x160], rcx
  555: movabs rax, 0x301c990
  55f: mov rcx, qword ptr [rax + riz + 0xe8]
  567: mov qword ptr [rbp - 0x188], rcx
  56e: movabs rax, 0x301c990
  578: mov rcx, qword ptr [rax + riz + 0xf0]
  580: mov qword ptr [rbp - 0x50], rcx
  587: mov rax, qword ptr [rbp - 0x888]
  58e: mov qword ptr [rbp - 0x158], rax
  595: mov r12, qword ptr [rbp - 0x888]
  59c: mov rax, qword ptr [rbp - 0x850]
  5a3: mov qword ptr [rbp - 0x100], rax
  5aa: mov rbx, qword ptr [rbp - 0x850]
  5b1: movabs rax, 0x301c990
  5bb: mov rcx, qword ptr [rax + riz + 0xf8]
  5c3: mov qword ptr [rbp - 0xd0], rcx
  5ca: mov rax, qword ptr [rbp - 0x890]
  5d1: mov qword ptr [rbp - 0x138], rax
  5d8: mov r13, qword ptr [rbp - 0x890]
  5df: movabs rax, 0x301c990
  5e9: mov rcx, qword ptr [rax + riz + 0x100]
  5f1: mov qword ptr [rbp - 0xf8], rcx
  5f8: mov rax, qword ptr [rbp - 0x898]
  5ff: mov qword ptr [rbp - 0x108], rax
  606: mov r14, qword ptr [rbp - 0x898]
  60d: movabs rax, 0x301c990
  617: mov rcx, qword ptr [rax + riz + 0x108]
  61f: mov qword ptr [rbp - 0x170], rcx
  626: mov r15, qword ptr [rbp - 0x8a0]
  62d: movabs rax, 0x301c990
  637: mov rcx, qword ptr [rax + riz + 0x110]
  63f: mov qword ptr [rbp - 0x278], rcx
  646: movabs rax, 0x301c990
  650: mov ecx, dword ptr [rax + riz + 0x8c]
  658: mov dword ptr [rbp - 0x2c], ecx
  65f: mov rax, qword ptr [rbp - 0x848]
  666: mov qword ptr [rbp - 0x48], rax
  66d: mov rcx, qword ptr [rbp - 0x848]
  674: mov rax, qword ptr [rbp - 0x840]
  67b: mov qword ptr [rbp - 0x40], rax
  682: mov rax, qword ptr [rbp - 0x840]
  689: mov rdi, qword ptr [rbp - 0x858]
  690: mov rsi, qword ptr [rbp - 0x860]
  697: mov r11, qword ptr [rbp - 0x880]
  69e: push rax
  69f: push rcx
  6a0: push rdx
  6a1: push rsi
  6a2: push rdi
  6a3: push r8
  6a5: push r9
  6a7: push r10
  6a9: push r11
  6ab: movabs rdi, 0x7fba4c3d6048
  6b5: movabs rsi, 0x8a0
  6bf: movabs rax, 0x7fba4bdd8770
  6c9: call rax
  6cb: pop r11
  6cd: pop r10
  6cf: pop r9
  6d1: pop r8
  6d3: pop rdi
  6d4: pop rsi
  6d5: pop rdx
  6d6: pop rcx
  6d7: pop rax
  6d8: sub rsp, 0x10
  6dc: mov qword ptr [rsp], rax
  6e0: movabs rax, 0xaa3898
  6ea: mov qword ptr [rsp + 8], rax
  6ef: pop rax
  6f0: ret 
Destination live vars values:
Indirect(6, -296, 8)	value=0x00000000030152a8
Indirect(6, -56, 8)	value=0x00007fba4b32a340
Indirect(6, -56, 8)	value=0x00007fba4b32a340
Indirect(6, -160, 8)	value=0x00007fba4b32a350
Register(10, 8, [-104])	value=0x00007fba4b32a360 (based on additional location)
Indirect(6, -280, 8)	value=0x00007fba4b32a370
Register(2, 8, [-72])	value=0x00007fba4b32a380 (based on additional location)
Indirect(6, -360, 8)	value=0x00007fba4b32a390
Indirect(6, -272, 8)	value=0x00007fba4b32a3a0
Indirect(6, -240, 8)	value=0x00007fba4b32a3b0
Indirect(6, -200, 8)	value=0x00007fba4b32a3c0
Indirect(6, -176, 8)	value=0x00007fba4b32a3d0
Indirect(6, -152, 8)	value=0x00007fba4b32a3e0
Indirect(6, -168, 8)	value=0x00007fba4b32a3f0
Indirect(6, -336, 8)	value=0x00007fba4b32a400
Indirect(6, -328, 8)	value=0x0000000003015368
Indirect(6, -136, 8)	value=0x00000000030152c0
Indirect(6, -288, 8)	value=0x000000000301535c
Register(0, 8, [-64])	value=0x00000000030152b8 (based on additional location)
Indirect(6, -144, 8)	value=0x00007fba4b32a3c8
Indirect(6, -128, 8)	value=0x00007fba4b32a3b8
Indirect(6, -232, 8)	value=0x00007fba4b32a3a8
Indirect(6, -224, 8)	value=0x00007fba4b32a3e8
Indirect(6, -400, 8)	value=0x00007fba4b32a3d8
Indirect(6, -184, 8)	value=0x00000000030152c8
Indirect(6, -304, 8)	value=0x00007fba4b32a408
Indirect(6, -192, 8)	value=0x00007fba4b32a3f8
Indirect(6, -216, 8)	value=0x00007fba4b32a348
Indirect(6, -376, 8)	value=0x00007fba4b32a358
Indirect(6, -320, 8)	value=0x00007fba4b32a368
Register(9, 8, [-88])	value=0x00007fba4b32a378 (based on additional location)
Register(8, 8, [-112])	value=0x00007fba4b32a388 (based on additional location)
Indirect(6, -384, 8)	value=0x00007fba4b32a398
Indirect(6, -352, 8)	value=0x0000000003016fc0
Indirect(6, -392, 8)	value=0x0000000003017e10
Indirect(6, -80, 8)	value=0x0000000003017e28
Register(12, 8, [-344])	value=0x0000000000000000 (based on additional location)
Register(3, 8, [-256])	value=0x000000000301d880 (based on additional location)
Indirect(6, -208, 8)	value=0x0000000003016fe0
Register(13, 8, [-312])	value=0x0000000003017e30 (based on additional location)
Indirect(6, -248, 8)	value=0x0000000003016fe8
Register(14, 8, [-264])	value=0x0000000003016fc8 (based on additional location)
Indirect(6, -368, 8)	value=0x0000000003016ffe
Register(15, 8, [])	value=0x0000000003015980 (may be clobbered)
Indirect(6, -632, 8)	value=0x000000000301d9a8
Indirect(6, -44, 4)	value=0x0000000000007fba
