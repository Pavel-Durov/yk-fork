@@@ Destination live vars values:
Indirect(6, -88, 8)	value=0x0000000000c002a8
Indirect(6, -56, 8)	value=0x00007ffff7db6340
Indirect(6, -56, 8)	value=0x00007ffff7db6340
Indirect(6, -400, 8)	value=0x00007ffff7db6350
Indirect(6, -296, 8)	value=0x00007ffff7db6360
Indirect(6, -360, 8)	value=0x00007ffff7db6370
Indirect(6, -352, 8)	value=0x00007ffff7db6380
Indirect(6, -392, 8)	value=0x00007ffff7db6390
Indirect(6, -312, 8)	value=0x00007ffff7db63a0
Indirect(6, -304, 8)	value=0x00007ffff7db63b0
Indirect(6, -216, 8)	value=0x00007ffff7db63c0
Indirect(6, -288, 8)	value=0x00007ffff7db63d0
Indirect(6, -264, 8)	value=0x00007ffff7db63e0
Indirect(6, -200, 8)	value=0x00007ffff7db63f0
Indirect(6, -168, 8)	value=0x00007ffff7db6400
Indirect(6, -160, 8)	value=0x0000000000c00368
Register(2, 8, [-328])	value=0x0000000000c002c0 (based on additional location)
Indirect(6, -192, 8)	value=0x0000000000c0035c
Indirect(6, -80, 8)	value=0x0000000000c002b8
Indirect(6, -184, 8)	value=0x00007ffff7db63c8
Indirect(6, -240, 8)	value=0x00007ffff7db63b8
Indirect(6, -272, 8)	value=0x00007ffff7db63a8
Indirect(6, -232, 8)	value=0x00007ffff7db63e8
Indirect(6, -224, 8)	value=0x00007ffff7db63d8
Indirect(6, -176, 8)	value=0x0000000000c002c8
Indirect(6, -136, 8)	value=0x00007ffff7db6408
Indirect(6, -120, 8)	value=0x00007ffff7db63f8
Indirect(6, -128, 8)	value=0x00007ffff7db6348
Indirect(6, -152, 8)	value=0x00007ffff7db6358
Indirect(6, -96, 8)	value=0x00007ffff7db6368
Indirect(6, -248, 8)	value=0x00007ffff7db6378
Indirect(6, -112, 8)	value=0x00007ffff7db6388
Indirect(6, -144, 8)	value=0x00007ffff7db6398
Indirect(6, -256, 8)	value=0x0000000000c01fb0
Register(14, 8, [-376])	value=0x0000000000c02e00 (based on additional location)
Register(0, 8, [-72])	value=0x0000000000c02e18 (based on additional location)
Indirect(6, -384, 8)	value=0x0000000000000000
Register(13, 8, [-344])	value=0x0000000000c08810 (based on additional location)
Indirect(6, -208, 8)	value=0x0000000000c01fd0
Register(15, 8, [-368])	value=0x0000000000c02e20 (based on additional location)
Indirect(6, -280, 8)	value=0x0000000000c01fd8
Register(3, 8, [-336])	value=0x0000000000c01fb8 (based on additional location)
Indirect(6, -320, 8)	value=0x0000000000c01fee
Register(12, 8, [-104])	value=0x0000000000c00980 (based on additional location)
Register(8, 8, [-776])	value=0x0000000000c08938 (based on additional location)
Indirect(6, -44, 4)	value=0x0000000000000000
JITed symbol file is not an object file, ignoring it.
Using buffer at 0xc078d0 for direction OptToUnopt
Buffer population complete. Variables mapping: {7: 56, 20: 160, 21: 168, 9: 72, 12: 96, 4: 32, 17: 136, 3: 24, 19: 152, 25: 200, 33: 264, 6: 48, 22: 176, 34: 272, 13: 104, 31: 248, 24: 192, 10: 80, 15: 120, 2: 16, 27: 216, 5: 40, 37: 296, 14: 112, 35: 280, 8: 64, 26: 208, 1: 8, 11: 88, 30: 240, 0: 0, 29: 232, 32: 256, 36: 288, 28: 224, 18: 144, 16: 128, 23: 184}
Transition: OptToUnopt ExecTrace: true
src_rbp: 0x7fffffffda00, reg_store: 0x7fffffffcfd0, src_frame_size: 0x9c0, dst_frame_size: 0x9c0, rbp_offset_reg_store: 0xa30
@@@ Source live vars values:
Indirect(6, -88, 8)	value=0x0000000000c002a8
Indirect(6, -56, 8)	value=0x00007ffff7db6340
Indirect(6, -56, 8)	value=0x00007ffff7db6340
Indirect(6, -400, 8)	value=0x00007ffff7db6350
Indirect(6, -296, 8)	value=0x00007ffff7db6360
Indirect(6, -360, 8)	value=0x00007ffff7db6370
Indirect(6, -352, 8)	value=0x00007ffff7db6380
Indirect(6, -392, 8)	value=0x00007ffff7db6390
Indirect(6, -312, 8)	value=0x00007ffff7db63a0
Indirect(6, -304, 8)	value=0x00007ffff7db63b0
Indirect(6, -216, 8)	value=0x00007ffff7db63c0
Indirect(6, -288, 8)	value=0x00007ffff7db63d0
Indirect(6, -264, 8)	value=0x00007ffff7db63e0
Indirect(6, -200, 8)	value=0x00007ffff7db63f0
Indirect(6, -168, 8)	value=0x00007ffff7db6400
Indirect(6, -160, 8)	value=0x0000000000c00368
Register(2, 8, [-328])	value=0x0000000000c002c0
Indirect(6, -192, 8)	value=0x0000000000c0035c
Indirect(6, -80, 8)	value=0x0000000000c002b8
Indirect(6, -184, 8)	value=0x00007ffff7db63c8
Indirect(6, -240, 8)	value=0x00007ffff7db63b8
Indirect(6, -272, 8)	value=0x00007ffff7db63a8
Indirect(6, -232, 8)	value=0x00007ffff7db63e8
Indirect(6, -224, 8)	value=0x00007ffff7db63d8
Indirect(6, -176, 8)	value=0x0000000000c002c8
Indirect(6, -136, 8)	value=0x00007ffff7db6408
Indirect(6, -120, 8)	value=0x00007ffff7db63f8
Indirect(6, -128, 8)	value=0x00007ffff7db6348
Indirect(6, -152, 8)	value=0x00007ffff7db6358
Indirect(6, -96, 8)	value=0x00007ffff7db6368
Indirect(6, -248, 8)	value=0x00007ffff7db6378
Indirect(6, -112, 8)	value=0x00007ffff7db6388
Indirect(6, -144, 8)	value=0x00007ffff7db6398
Indirect(6, -256, 8)	value=0x0000000000c01fb0
Register(14, 8, [-376])	value=0x0000000000c02e00
Register(0, 8, [-72])	value=0x0000000000c02e18
Indirect(6, -384, 8)	value=0x0000000000000000
Register(13, 8, [-344])	value=0x0000000000c08810
Indirect(6, -208, 8)	value=0x0000000000c01fd0
Register(15, 8, [-368])	value=0x0000000000c02e20
Indirect(6, -280, 8)	value=0x0000000000c01fd8
Register(3, 8, [-336])	value=0x0000000000c01fb8
Indirect(6, -320, 8)	value=0x0000000000c01fee
Register(12, 8, [-104])	value=0x0000000000c00980
Register(8, 8, [-776])	value=0x0000000000c08938
Indirect(6, -44, 4)	value=0x0000000000000000
Copying live src: Indirect(6, -88, 8), dst: Indirect(6, -88, 8)
Copying live src: Indirect(6, -56, 8), dst: Indirect(6, -56, 8)
Copying live src: Indirect(6, -56, 8), dst: Indirect(6, -56, 8)
Copying live src: Indirect(6, -400, 8), dst: Indirect(6, -400, 8)
Copying live src: Indirect(6, -296, 8), dst: Indirect(6, -296, 8)
Copying live src: Indirect(6, -360, 8), dst: Indirect(6, -360, 8)
Copying live src: Indirect(6, -352, 8), dst: Indirect(6, -352, 8)
Copying live src: Indirect(6, -392, 8), dst: Indirect(6, -392, 8)
Copying live src: Indirect(6, -312, 8), dst: Indirect(6, -312, 8)
Copying live src: Indirect(6, -304, 8), dst: Indirect(6, -304, 8)
Copying live src: Indirect(6, -216, 8), dst: Indirect(6, -216, 8)
Copying live src: Indirect(6, -288, 8), dst: Indirect(6, -288, 8)
Copying live src: Indirect(6, -264, 8), dst: Indirect(6, -264, 8)
Copying live src: Indirect(6, -200, 8), dst: Indirect(6, -200, 8)
Copying live src: Indirect(6, -168, 8), dst: Indirect(6, -168, 8)
Copying live src: Indirect(6, -160, 8), dst: Indirect(6, -160, 8)
Copying live src: Register(2, 8, [-328]), dst: Register(2, 8, [-328])
Copying live src: Indirect(6, -192, 8), dst: Indirect(6, -192, 8)
Copying live src: Indirect(6, -80, 8), dst: Indirect(6, -80, 8)
Copying live src: Indirect(6, -184, 8), dst: Indirect(6, -184, 8)
Copying live src: Indirect(6, -240, 8), dst: Indirect(6, -240, 8)
Copying live src: Indirect(6, -272, 8), dst: Indirect(6, -272, 8)
Copying live src: Indirect(6, -232, 8), dst: Indirect(6, -232, 8)
Copying live src: Indirect(6, -224, 8), dst: Indirect(6, -224, 8)
Copying live src: Indirect(6, -176, 8), dst: Indirect(6, -176, 8)
Copying live src: Indirect(6, -136, 8), dst: Indirect(6, -136, 8)
Copying live src: Indirect(6, -120, 8), dst: Indirect(6, -120, 8)
Copying live src: Indirect(6, -128, 8), dst: Indirect(6, -128, 8)
Copying live src: Indirect(6, -152, 8), dst: Indirect(6, -152, 8)
Copying live src: Indirect(6, -96, 8), dst: Indirect(6, -96, 8)
Copying live src: Indirect(6, -248, 8), dst: Indirect(6, -248, 8)
Copying live src: Indirect(6, -112, 8), dst: Indirect(6, -112, 8)
Copying live src: Indirect(6, -144, 8), dst: Indirect(6, -144, 8)
Copying live src: Indirect(6, -256, 8), dst: Indirect(6, -256, 8)
Copying live src: Register(14, 8, [-376]), dst: Register(14, 8, [-376])
Copying live src: Register(0, 8, [-72]), dst: Register(0, 8, [-72])
Copying live src: Indirect(6, -384, 8), dst: Indirect(6, -384, 8)
Copying live src: Register(13, 8, [-344]), dst: Register(13, 8, [-344])
Copying live src: Indirect(6, -208, 8), dst: Indirect(6, -208, 8)
Copying live src: Register(15, 8, [-368]), dst: Register(15, 8, [-368])
Copying live src: Indirect(6, -280, 8), dst: Indirect(6, -280, 8)
Copying live src: Register(3, 8, [-336]), dst: Register(3, 8, [-336])
Copying live src: Indirect(6, -320, 8), dst: Indirect(6, -320, 8)
Copying live src: Register(12, 8, [-104]), dst: Register(12, 8, [-104])
Copying live src: Register(8, 8, [-776]), dst: Register(8, 8, [-776])
Copying live src: Indirect(6, -44, 4), dst: Indirect(6, -44, 4)
@@@ Used temp registers: [RestoreTempRegisters { src_location: Register(2, 8, [-328]), dst_location: Register(2, 8, [-328]), src_var_indirect_index: 16 }, RestoreTempRegisters { src_location: Register(0, 8, [-72]), dst_location: Register(0, 8, [-72]), src_var_indirect_index: 33 }]
Restoring unused register to __ykrt_control_point save point: "rdi"
Restoring unused register to __ykrt_control_point save point: "rsi"
Restoring unused register to __ykrt_control_point save point: "r9"
Restoring unused register to __ykrt_control_point save point: "r10"
Restoring unused register to __ykrt_control_point save point: "r11"
ASM DUMP:
  0: int3 
  1: movabs rbp, 0x7fffffffda00
  b: movabs rsp, 0x7fffffffda00
  15: sub rsp, 0x9c0
  1c: movabs rax, 0xc078d0
  26: mov rcx, qword ptr [rbp - 0x58]
  2d: mov qword ptr [rax + riz], rcx
  35: mov rcx, qword ptr [rbp - 0x38]
  3c: mov qword ptr [rax + riz + 8], rcx
  44: mov rcx, qword ptr [rbp - 0x38]
  4b: mov qword ptr [rax + riz + 0x10], rcx
  53: mov rcx, qword ptr [rbp - 0x190]
  5a: mov qword ptr [rax + riz + 0x18], rcx
  62: mov rcx, qword ptr [rbp - 0x128]
  69: mov qword ptr [rax + riz + 0x20], rcx
  71: mov rcx, qword ptr [rbp - 0x168]
  78: mov qword ptr [rax + riz + 0x28], rcx
  80: mov rcx, qword ptr [rbp - 0x160]
  87: mov qword ptr [rax + riz + 0x30], rcx
  8f: mov rcx, qword ptr [rbp - 0x188]
  96: mov qword ptr [rax + riz + 0x38], rcx
  9e: mov rcx, qword ptr [rbp - 0x138]
  a5: mov qword ptr [rax + riz + 0x40], rcx
  ad: mov rcx, qword ptr [rbp - 0x130]
  b4: mov qword ptr [rax + riz + 0x48], rcx
  bc: mov rcx, qword ptr [rbp - 0xd8]
  c3: mov qword ptr [rax + riz + 0x50], rcx
  cb: mov rcx, qword ptr [rbp - 0x120]
  d2: mov qword ptr [rax + riz + 0x58], rcx
  da: mov rcx, qword ptr [rbp - 0x108]
  e1: mov qword ptr [rax + riz + 0x60], rcx
  e9: mov rcx, qword ptr [rbp - 0xc8]
  f0: mov qword ptr [rax + riz + 0x68], rcx
  f8: mov rcx, qword ptr [rbp - 0xa8]
  ff: mov qword ptr [rax + riz + 0x70], rcx
  107: mov rcx, qword ptr [rbp - 0xa0]
  10e: mov qword ptr [rax + riz + 0x78], rcx
  116: mov rcx, qword ptr [rbp - 0xc0]
  11d: mov qword ptr [rax + riz + 0x80], rcx
  125: mov rcx, qword ptr [rbp - 0x50]
  12c: mov qword ptr [rax + riz + 0x88], rcx
  134: mov rcx, qword ptr [rbp - 0xb8]
  13b: mov qword ptr [rax + riz + 0x90], rcx
  143: mov rcx, qword ptr [rbp - 0xf0]
  14a: mov qword ptr [rax + riz + 0x98], rcx
  152: mov rcx, qword ptr [rbp - 0x110]
  159: mov qword ptr [rax + riz + 0xa0], rcx
  161: mov rcx, qword ptr [rbp - 0xe8]
  168: mov qword ptr [rax + riz + 0xa8], rcx
  170: mov rcx, qword ptr [rbp - 0xe0]
  177: mov qword ptr [rax + riz + 0xb0], rcx
  17f: mov rcx, qword ptr [rbp - 0xb0]
  186: mov qword ptr [rax + riz + 0xb8], rcx
  18e: mov rcx, qword ptr [rbp - 0x88]
  195: mov qword ptr [rax + riz + 0xc0], rcx
  19d: mov rcx, qword ptr [rbp - 0x78]
  1a4: mov qword ptr [rax + riz + 0xc8], rcx
  1ac: mov rcx, qword ptr [rbp - 0x80]
  1b3: mov qword ptr [rax + riz + 0xd0], rcx
  1bb: mov rcx, qword ptr [rbp - 0x98]
  1c2: mov qword ptr [rax + riz + 0xd8], rcx
  1ca: mov rcx, qword ptr [rbp - 0x60]
  1d1: mov qword ptr [rax + riz + 0xe0], rcx
  1d9: mov rcx, qword ptr [rbp - 0xf8]
  1e0: mov qword ptr [rax + riz + 0xe8], rcx
  1e8: mov rcx, qword ptr [rbp - 0x70]
  1ef: mov qword ptr [rax + riz + 0xf0], rcx
  1f7: mov rcx, qword ptr [rbp - 0x90]
  1fe: mov qword ptr [rax + riz + 0xf8], rcx
  206: mov rcx, qword ptr [rbp - 0x100]
  20d: mov qword ptr [rax + riz + 0x100], rcx
  215: mov rcx, qword ptr [rbp - 0x180]
  21c: mov qword ptr [rax + riz + 0x108], rcx
  224: mov rcx, qword ptr [rbp - 0xd0]
  22b: mov qword ptr [rax + riz + 0x110], rcx
  233: mov rcx, qword ptr [rbp - 0x118]
  23a: mov qword ptr [rax + riz + 0x118], rcx
  242: mov rcx, qword ptr [rbp - 0x140]
  249: mov qword ptr [rax + riz + 0x120], rcx
  251: mov ecx, dword ptr [rbp - 0x2c]
  258: mov dword ptr [rax + riz + 0x128], ecx
  260: movabs rax, 0xc078d0
  26a: mov rcx, qword ptr [rax + riz]
  272: mov qword ptr [rbp - 0x58], rcx
  279: movabs rax, 0xc078d0
  283: mov rcx, qword ptr [rax + riz + 8]
  28b: mov qword ptr [rbp - 0x38], rcx
  292: movabs rax, 0xc078d0
  29c: mov rcx, qword ptr [rax + riz + 0x10]
  2a4: mov qword ptr [rbp - 0x38], rcx
  2ab: movabs rax, 0xc078d0
  2b5: mov rcx, qword ptr [rax + riz + 0x18]
  2bd: mov qword ptr [rbp - 0x190], rcx
  2c4: movabs rax, 0xc078d0
  2ce: mov rcx, qword ptr [rax + riz + 0x20]
  2d6: mov qword ptr [rbp - 0x128], rcx
  2dd: movabs rax, 0xc078d0
  2e7: mov rcx, qword ptr [rax + riz + 0x28]
  2ef: mov qword ptr [rbp - 0x168], rcx
  2f6: movabs rax, 0xc078d0
  300: mov rcx, qword ptr [rax + riz + 0x30]
  308: mov qword ptr [rbp - 0x160], rcx
  30f: movabs rax, 0xc078d0
  319: mov rcx, qword ptr [rax + riz + 0x38]
  321: mov qword ptr [rbp - 0x188], rcx
  328: movabs rax, 0xc078d0
  332: mov rcx, qword ptr [rax + riz + 0x40]
  33a: mov qword ptr [rbp - 0x138], rcx
  341: movabs rax, 0xc078d0
  34b: mov rcx, qword ptr [rax + riz + 0x48]
  353: mov qword ptr [rbp - 0x130], rcx
  35a: movabs rax, 0xc078d0
  364: mov rcx, qword ptr [rax + riz + 0x50]
  36c: mov qword ptr [rbp - 0xd8], rcx
  373: movabs rax, 0xc078d0
  37d: mov rcx, qword ptr [rax + riz + 0x58]
  385: mov qword ptr [rbp - 0x120], rcx
  38c: movabs rax, 0xc078d0
  396: mov rcx, qword ptr [rax + riz + 0x60]
  39e: mov qword ptr [rbp - 0x108], rcx
  3a5: movabs rax, 0xc078d0
  3af: mov rcx, qword ptr [rax + riz + 0x68]
  3b7: mov qword ptr [rbp - 0xc8], rcx
  3be: movabs rax, 0xc078d0
  3c8: mov rcx, qword ptr [rax + riz + 0x70]
  3d0: mov qword ptr [rbp - 0xa8], rcx
  3d7: movabs rax, 0xc078d0
  3e1: mov rcx, qword ptr [rax + riz + 0x78]
  3e9: mov qword ptr [rbp - 0xa0], rcx
  3f0: movabs rax, 0xc078d0
  3fa: mov rcx, qword ptr [rax + riz + 0x80]
  402: mov qword ptr [rbp - 0xc0], rcx
  409: movabs rax, 0xc078d0
  413: mov rcx, qword ptr [rax + riz + 0x88]
  41b: mov qword ptr [rbp - 0x50], rcx
  422: movabs rax, 0xc078d0
  42c: mov rcx, qword ptr [rax + riz + 0x90]
  434: mov qword ptr [rbp - 0xb8], rcx
  43b: movabs rax, 0xc078d0
  445: mov rcx, qword ptr [rax + riz + 0x98]
  44d: mov qword ptr [rbp - 0xf0], rcx
  454: movabs rax, 0xc078d0
  45e: mov rcx, qword ptr [rax + riz + 0xa0]
  466: mov qword ptr [rbp - 0x110], rcx
  46d: movabs rax, 0xc078d0
  477: mov rcx, qword ptr [rax + riz + 0xa8]
  47f: mov qword ptr [rbp - 0xe8], rcx
  486: movabs rax, 0xc078d0
  490: mov rcx, qword ptr [rax + riz + 0xb0]
  498: mov qword ptr [rbp - 0xe0], rcx
  49f: movabs rax, 0xc078d0
  4a9: mov rcx, qword ptr [rax + riz + 0xb8]
  4b1: mov qword ptr [rbp - 0xb0], rcx
  4b8: movabs rax, 0xc078d0
  4c2: mov rcx, qword ptr [rax + riz + 0xc0]
  4ca: mov qword ptr [rbp - 0x88], rcx
  4d1: movabs rax, 0xc078d0
  4db: mov rcx, qword ptr [rax + riz + 0xc8]
  4e3: mov qword ptr [rbp - 0x78], rcx
  4ea: movabs rax, 0xc078d0
  4f4: mov rcx, qword ptr [rax + riz + 0xd0]
  4fc: mov qword ptr [rbp - 0x80], rcx
  503: movabs rax, 0xc078d0
  50d: mov rcx, qword ptr [rax + riz + 0xd8]
  515: mov qword ptr [rbp - 0x98], rcx
  51c: movabs rax, 0xc078d0
  526: mov rcx, qword ptr [rax + riz + 0xe0]
  52e: mov qword ptr [rbp - 0x60], rcx
  535: movabs rax, 0xc078d0
  53f: mov rcx, qword ptr [rax + riz + 0xe8]
  547: mov qword ptr [rbp - 0xf8], rcx
  54e: movabs rax, 0xc078d0
  558: mov rcx, qword ptr [rax + riz + 0xf0]
  560: mov qword ptr [rbp - 0x70], rcx
  567: movabs rax, 0xc078d0
  571: mov rcx, qword ptr [rax + riz + 0xf8]
  579: mov qword ptr [rbp - 0x90], rcx
  580: movabs rax, 0xc078d0
  58a: mov rcx, qword ptr [rax + riz + 0x100]
  592: mov qword ptr [rbp - 0x100], rcx
  599: mov rax, qword ptr [rbp - 0xa28]
  5a0: mov qword ptr [rbp - 0x178], rax
  5a7: mov r14, qword ptr [rbp - 0xa28]
  5ae: movabs rax, 0xc078d0
  5b8: mov rcx, qword ptr [rax + riz + 0x108]
  5c0: mov qword ptr [rbp - 0x180], rcx
  5c7: mov rax, qword ptr [rbp - 0xa20]
  5ce: mov qword ptr [rbp - 0x158], rax
  5d5: mov r13, qword ptr [rbp - 0xa20]
  5dc: movabs rax, 0xc078d0
  5e6: mov rcx, qword ptr [rax + riz + 0x110]
  5ee: mov qword ptr [rbp - 0xd0], rcx
  5f5: mov rax, qword ptr [rbp - 0xa30]
  5fc: mov qword ptr [rbp - 0x170], rax
  603: mov r15, qword ptr [rbp - 0xa30]
  60a: movabs rax, 0xc078d0
  614: mov rcx, qword ptr [rax + riz + 0x118]
  61c: mov qword ptr [rbp - 0x118], rcx
  623: mov rax, qword ptr [rbp - 0x9e0]
  62a: mov qword ptr [rbp - 0x150], rax
  631: mov rbx, qword ptr [rbp - 0x9e0]
  638: movabs rax, 0xc078d0
  642: mov rcx, qword ptr [rax + riz + 0x120]
  64a: mov qword ptr [rbp - 0x140], rcx
  651: mov rax, qword ptr [rbp - 0xa18]
  658: mov qword ptr [rbp - 0x68], rax
  65f: mov r12, qword ptr [rbp - 0xa18]
  666: mov rax, qword ptr [rbp - 0x9f8]
  66d: mov qword ptr [rbp - 0x308], rax
  674: mov r8, qword ptr [rbp - 0x9f8]
  67b: movabs rax, 0xc078d0
  685: mov ecx, dword ptr [rax + riz + 0x128]
  68d: mov dword ptr [rbp - 0x2c], ecx
  694: mov rax, qword ptr [rbp - 0x9d8]
  69b: mov qword ptr [rbp - 0x148], rax
  6a2: mov rcx, qword ptr [rbp - 0x9d8]
  6a9: mov rax, qword ptr [rbp - 0x9d0]
  6b0: mov qword ptr [rbp - 0x48], rax
  6b7: mov rax, qword ptr [rbp - 0x9d0]
  6be: mov rdi, qword ptr [rbp - 0x9e8]
  6c5: mov rsi, qword ptr [rbp - 0x9f0]
  6cc: mov r9, qword ptr [rbp - 0xa00]
  6d3: mov r10, qword ptr [rbp - 0xa08]
  6da: mov r11, qword ptr [rbp - 0xa10]
  6e1: push rax
  6e2: push rcx
  6e3: push rdx
  6e4: push rsi
  6e5: push rdi
  6e6: push r8
  6e8: push r9
  6ea: push r10
  6ec: push r11
  6ee: movabs rdi, 0x7ffff5f70048
  6f8: movabs rsi, 0xa30
  702: movabs rax, 0x7ffff77d8310
  70c: call rax
  70e: pop r11
  710: pop r10
  712: pop r9
  714: pop r8
  716: pop rdi
  717: pop rsi
  718: pop rdx
  719: pop rcx
  71a: pop rax
  71b: movabs rdi, 0x7fffffffda00
  725: movabs rsi, 0x7fffffffd040
  72f: movabs rdx, 0x7ffff7fbf000
  739: movabs rcx, 0x7ffff78032b0
  743: call rcx
