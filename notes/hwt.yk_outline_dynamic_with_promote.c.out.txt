running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 14 filtered out; finished in 0.00s

[1m[32m     Running[0m unittests src/lib.rs (target/debug/deps/tests-85b48ad7f40a41cd)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

[1m[32m     Running[0m unittests src/bin/dump_ir.rs (target/debug/deps/dump_ir-5a75d08e22383257)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

[1m[32m     Running[0m unittests src/bin/gdb_c_test.rs (target/debug/deps/gdb_c_test-7bae41caa2faa194)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

[1m[32m     Running[0m langtest_c.rs (target/debug/deps/c_tests-311eca720dce6708)
Running C tests...

running 1 testsyk-jit-event: start-tracing
4: 2
yk-jit-event: stop-tracing
--- Begin aot ---
# IR format version: 0
# Num funcs: 19
# Num consts: 10
# Num global decls: 3
# Num types: 22
global_decl tls @shadowstack_0
global_decl @stderr
global_decl @.str

func g(%arg0: i64) -> i64 {
  bb0:
    %0_0: i64 = arg(0)
    br bb1
  bb1:
    # yk_outline_dynamic_with_promote.c:32: return yk_promote(x) + 1;
    %1_0: i64 = promote %0_0 [safepoint: 1i64, (%0_0, %1_0)]
    br bb2
  bb2:
    %2_0: i64 = add %1_0, 1i64
    br bb4
  bb3:
    ret %2_0
  bb4:
    br bb3
}

func llvm.dbg.value(%arg0: ?ty<metadata>, %arg1: ?ty<metadata>, %arg2: ?ty<metadata>);

func __yk_promote_usize(%arg0: i64) -> i64;

#[yk_outline]
func f(%arg0: i64) -> i64 {
  bb0:
    %0_0: i64 = arg(0)
    %0_1: ptr = load @shadowstack_0
    %0_2: ptr = ptr_add %0_1, 16
    *@shadowstack_0 = %0_2
    %0_4: ptr = ptr_add %0_1, 0
    br bb1
  bb1:
    # yk_outline_dynamic_with_promote.c:38: uintptr_t (*fptr)(uintptr_t) = g;
    call llvm.lifetime.start.p0(8i64, %0_4)
    br bb2
  bb2:
    *%0_4 = g
    # yk_outline_dynamic_with_promote.c:40: return fptr(x);
    br bb3
  bb3:
    %3_0: ptr = load %0_4
    %3_1: i64 = icall %3_0(%0_0)
    # yk_outline_dynamic_with_promote.c:41: }
    br bb4
  bb4:
    call llvm.lifetime.end.p0(8i64, %0_4)
    # yk_outline_dynamic_with_promote.c:40: return fptr(x);
    br bb5
  bb5:
    br bb7
  bb6:
    *@shadowstack_0 = %0_1
    ret %3_1
  bb7:
    br bb6
}

func llvm.lifetime.start.p0(%arg0: i64, %arg1: ptr);

func llvm.lifetime.end.p0(%arg0: i64, %arg1: ptr);

#[yk_outline]
func main(%arg0: i32, %arg1: ptr) -> i32 {
  bb0:
    %0_0: i32 = arg(0)
    %0_1: ptr = arg(1)
    %0_2: ptr = call malloc(1000000i64)
    %0_3: ptr = ptr_add %0_2, 16
    *@shadowstack_0 = %0_3
    %0_5: ptr = alloca {0: i64}, 1, 8
    %0_6: ptr = ptr_add %0_2, 0
    br bb1
  bb1:
    # yk_outline_dynamic_with_promote.c:44: YkMT *mt = yk_mt_new(NULL);
    %1_0: ptr = call yk_mt_new(0x0)
    br bb2
  bb2:
    # yk_outline_dynamic_with_promote.c:45: yk_mt_hot_threshold_set(mt, 0);
    call yk_mt_hot_threshold_set(%1_0, 0i32)
    # yk_outline_dynamic_with_promote.c:46: YkLocation loc = yk_location_new();
    br bb3
  bb3:
    call llvm.lifetime.start.p0(8i64, %0_5)
    br bb4
  bb4:
    %4_0: i64 = call yk_location_new()
    br bb5
  bb5:
    *%0_5 = %4_0
    # yk_outline_dynamic_with_promote.c:48: size_t i = 4;
    call llvm.lifetime.start.p0(8i64, %0_6)
    br bb6
  bb6:
    *%0_6 = 4i64
    br bb7
  bb7:
    # yk_outline_dynamic_with_promote.c:51: while (i > 0) {
    br bb8
  bb8:
    %8_0: i64 = load %0_6
    %8_1: i1 = eq %8_0, 0i64
    condbr %8_1, bb15, bb9 [safepoint: 2i64, (%0_5, %0_6, %1_0, %8_1)]
  bb9:
    br bb10
  bb10:
    # yk_outline_dynamic_with_promote.c:52: yk_mt_control_point(mt, &loc);
    call llvm.experimental.patchpoint.void(0i64, 13i32, __ykrt_control_point, 3i32, %1_0, %0_5, 0i64, %0_5, %0_6, %1_0) [safepoint: 0i64, (%0_5, %0_6, %1_0)]
    # yk_outline_dynamic_with_promote.c:53: fprintf(stderr, "%" PRIuPTR ": %" PRIuPTR "\n", i, f(1));
    br bb11
  bb11:
    %11_0: ptr = load @stderr
    %11_1: i64 = load %0_6
    %11_2: i64 = call f(1i64) [safepoint: 4i64, (%0_5, %0_6, %1_0, %11_0, %11_1)]
    br bb12
  bb12:
    %12_0: i32 = call fprintf(%11_0, @.str, %11_1, %11_2)
    # yk_outline_dynamic_with_promote.c:54: i--;
    br bb13
  bb13:
    %13_0: i64 = load %0_6
    %13_1: i64 = add %13_0, -1i64
    *%0_6 = %13_1
    # yk_outline_dynamic_with_promote.c:51: while (i > 0) {
    %13_3: i1 = eq %13_1, 0i64
    condbr %13_3, bb14, bb20 [safepoint: 5i64, (%0_5, %0_6, %1_0, %13_3)]
  bb14:
    # yk_outline_dynamic_with_promote.c:56: yk_location_drop(loc);
    br bb15
  bb15:
    %15_0: i64 = load %0_5
    call yk_location_drop(%15_0)
    # yk_outline_dynamic_with_promote.c:57: yk_mt_shutdown(mt);
    br bb16
  bb16:
    call yk_mt_shutdown(%1_0)
    # yk_outline_dynamic_with_promote.c:59: }
    br bb17
  bb17:
    call llvm.lifetime.end.p0(8i64, %0_6)
    br bb18
  bb18:
    call llvm.lifetime.end.p0(8i64, %0_5)
    # yk_outline_dynamic_with_promote.c:58: return (EXIT_SUCCESS);
    br bb19
  bb19:
    br bb22
  bb20:
    br bb10
  bb21:
    ret 0i32
  bb22:
    br bb21
}

func yk_mt_new(%arg0: ptr) -> ptr;

func yk_mt_hot_threshold_set(%arg0: ptr, %arg1: i32);

func llvm.dbg.declare(%arg0: ?ty<metadata>, %arg1: ?ty<metadata>, %arg2: ?ty<metadata>);

func yk_location_new() -> i64;

func yk_mt_control_point(%arg0: ptr, %arg1: ptr);

func fprintf(%arg0: ptr, %arg1: ptr, ...) -> i32;

func yk_location_drop(%arg0: i64);

func yk_mt_shutdown(%arg0: ptr);

func malloc(%arg0: i64) -> ptr;

func __ykrt_control_point(%arg0: ptr, %arg1: ptr, %arg2: i64);

func llvm.experimental.patchpoint.void(%arg0: i64, %arg1: i32, %arg2: ptr, %arg3: i32, ...);

func llvm.experimental.stackmap(%arg0: i64, %arg1: i32, ...);

--- End aot ---
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] "@@ process_block inst - {:?}" = "@@ process_block inst - {:?}"
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] inst = Load {
    ptr: Global(
        GlobalDeclIdx(
            1,
        ),
    ),
    tyidx: TyIdx(
        5,
    ),
    volatile: false,
}
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] "@@ process_block inst - {:?}" = "@@ process_block inst - {:?}"
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] inst = Load {
    ptr: LocalVariable(
        InstID {
            funcidx: FuncIdx(
                6,
            ),
            bbidx: BBlockIdx(
                0,
            ),
            iidx: InstIdx(
                6,
            ),
        },
    ),
    tyidx: TyIdx(
        1,
    ),
    volatile: false,
}
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] "@@ process_block inst - {:?}" = "@@ process_block inst - {:?}"
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] inst = Call {
    callee: FuncIdx(
        3,
    ),
    args: [
        Const(
            ConstIdx(
                0,
            ),
        ),
    ],
    safepoint: Some(
        DeoptSafepoint {
            id: 4,
            lives: [
                LocalVariable(
                    InstID {
                        funcidx: FuncIdx(
                            6,
                        ),
                        bbidx: BBlockIdx(
                            0,
                        ),
                        iidx: InstIdx(
                            5,
                        ),
                    },
                ),
                LocalVariable(
                    InstID {
                        funcidx: FuncIdx(
                            6,
                        ),
                        bbidx: BBlockIdx(
                            0,
                        ),
                        iidx: InstIdx(
                            6,
                        ),
                    },
                ),
                LocalVariable(
                    InstID {
                        funcidx: FuncIdx(
                            6,
                        ),
                        bbidx: BBlockIdx(
                            1,
                        ),
                        iidx: InstIdx(
                            0,
                        ),
                    },
                ),
                LocalVariable(
                    InstID {
                        funcidx: FuncIdx(
                            6,
                        ),
                        bbidx: BBlockIdx(
                            11,
                        ),
                        iidx: InstIdx(
                            0,
                        ),
                    },
                ),
                LocalVariable(
                    InstID {
                        funcidx: FuncIdx(
                            6,
                        ),
                        bbidx: BBlockIdx(
                            11,
                        ),
                        iidx: InstIdx(
                            1,
                        ),
                    },
                ),
            ],
        },
    ),
}
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] "@@ process_block inst - {:?}" = "@@ process_block inst - {:?}"
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] inst = Br {
    succ: BBlockIdx(
        12,
    ),
}
[ykrt/src/compile/jitc_yk/trace_builder.rs:174:21] "@@ process_promotions_and_debug_strs_only tyidx - {:?}" = "@@ process_promotions_and_debug_strs_only tyidx - {:?}"
[ykrt/src/compile/jitc_yk/trace_builder.rs:174:21] tyidx = TyIdx(
    1,
)
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] "@@ process_block inst - {:?}" = "@@ process_block inst - {:?}"
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] inst = Call {
    callee: FuncIdx(
        12,
    ),
    args: [
        LocalVariable(
            InstID {
                funcidx: FuncIdx(
                    6,
                ),
                bbidx: BBlockIdx(
                    11,
                ),
                iidx: InstIdx(
                    0,
                ),
            },
        ),
        Global(
            GlobalDeclIdx(
                2,
            ),
        ),
        LocalVariable(
            InstID {
                funcidx: FuncIdx(
                    6,
                ),
                bbidx: BBlockIdx(
                    11,
                ),
                iidx: InstIdx(
                    1,
                ),
            },
        ),
        LocalVariable(
            InstID {
                funcidx: FuncIdx(
                    6,
                ),
                bbidx: BBlockIdx(
                    11,
                ),
                iidx: InstIdx(
                    2,
                ),
            },
        ),
    ],
    safepoint: None,
}
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] "@@ process_block inst - {:?}" = "@@ process_block inst - {:?}"
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] inst = Br {
    succ: BBlockIdx(
        13,
    ),
}
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] "@@ process_block inst - {:?}" = "@@ process_block inst - {:?}"
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] inst = Load {
    ptr: LocalVariable(
        InstID {
            funcidx: FuncIdx(
                6,
            ),
            bbidx: BBlockIdx(
                0,
            ),
            iidx: InstIdx(
                6,
            ),
        },
    ),
    tyidx: TyIdx(
        1,
    ),
    volatile: false,
}
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] "@@ process_block inst - {:?}" = "@@ process_block inst - {:?}"
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] inst = BinaryOp {
    lhs: LocalVariable(
        InstID {
            funcidx: FuncIdx(
                6,
            ),
            bbidx: BBlockIdx(
                13,
            ),
            iidx: InstIdx(
                0,
            ),
        },
    ),
    binop: Add,
    rhs: Const(
        ConstIdx(
            9,
        ),
    ),
}
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] "@@ process_block inst - {:?}" = "@@ process_block inst - {:?}"
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] inst = Store {
    val: LocalVariable(
        InstID {
            funcidx: FuncIdx(
                6,
            ),
            bbidx: BBlockIdx(
                13,
            ),
            iidx: InstIdx(
                1,
            ),
        },
    ),
    tgt: LocalVariable(
        InstID {
            funcidx: FuncIdx(
                6,
            ),
            bbidx: BBlockIdx(
                0,
            ),
            iidx: InstIdx(
                6,
            ),
        },
    ),
    volatile: false,
}
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] "@@ process_block inst - {:?}" = "@@ process_block inst - {:?}"
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] inst = ICmp {
    tyidx: TyIdx(
        10,
    ),
    lhs: LocalVariable(
        InstID {
            funcidx: FuncIdx(
                6,
            ),
            bbidx: BBlockIdx(
                13,
            ),
            iidx: InstIdx(
                1,
            ),
        },
    ),
    pred: Equal,
    rhs: Const(
        ConstIdx(
            6,
        ),
    ),
}
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] "@@ process_block inst - {:?}" = "@@ process_block inst - {:?}"
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] inst = CondBr {
    cond: LocalVariable(
        InstID {
            funcidx: FuncIdx(
                6,
            ),
            bbidx: BBlockIdx(
                13,
            ),
            iidx: InstIdx(
                3,
            ),
        },
    ),
    true_bb: BBlockIdx(
        14,
    ),
    false_bb: BBlockIdx(
        20,
    ),
    safepoint: DeoptSafepoint {
        id: 5,
        lives: [
            LocalVariable(
                InstID {
                    funcidx: FuncIdx(
                        6,
                    ),
                    bbidx: BBlockIdx(
                        0,
                    ),
                    iidx: InstIdx(
                        5,
                    ),
                },
            ),
            LocalVariable(
                InstID {
                    funcidx: FuncIdx(
                        6,
                    ),
                    bbidx: BBlockIdx(
                        0,
                    ),
                    iidx: InstIdx(
                        6,
                    ),
                },
            ),
            LocalVariable(
                InstID {
                    funcidx: FuncIdx(
                        6,
                    ),
                    bbidx: BBlockIdx(
                        1,
                    ),
                    iidx: InstIdx(
                        0,
                    ),
                },
            ),
            LocalVariable(
                InstID {
                    funcidx: FuncIdx(
                        6,
                    ),
                    bbidx: BBlockIdx(
                        13,
                    ),
                    iidx: InstIdx(
                        3,
                    ),
                },
            ),
        ],
    },
}
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] "@@ process_block inst - {:?}" = "@@ process_block inst - {:?}"
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] inst = Br {
    succ: BBlockIdx(
        10,
    ),
}
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] "@@ process_block inst - {:?}" = "@@ process_block inst - {:?}"
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] inst = Call {
    callee: FuncIdx(
        17,
    ),
    args: [
        Const(
            ConstIdx(
                6,
            ),
        ),
        Const(
            ConstIdx(
                7,
            ),
        ),
        Func(
            FuncIdx(
                16,
            ),
        ),
        Const(
            ConstIdx(
                8,
            ),
        ),
        LocalVariable(
            InstID {
                funcidx: FuncIdx(
                    6,
                ),
                bbidx: BBlockIdx(
                    1,
                ),
                iidx: InstIdx(
                    0,
                ),
            },
        ),
        LocalVariable(
            InstID {
                funcidx: FuncIdx(
                    6,
                ),
                bbidx: BBlockIdx(
                    0,
                ),
                iidx: InstIdx(
                    5,
                ),
            },
        ),
        Const(
            ConstIdx(
                6,
            ),
        ),
        LocalVariable(
            InstID {
                funcidx: FuncIdx(
                    6,
                ),
                bbidx: BBlockIdx(
                    0,
                ),
                iidx: InstIdx(
                    5,
                ),
            },
        ),
        LocalVariable(
            InstID {
                funcidx: FuncIdx(
                    6,
                ),
                bbidx: BBlockIdx(
                    0,
                ),
                iidx: InstIdx(
                    6,
                ),
            },
        ),
        LocalVariable(
            InstID {
                funcidx: FuncIdx(
                    6,
                ),
                bbidx: BBlockIdx(
                    1,
                ),
                iidx: InstIdx(
                    0,
                ),
            },
        ),
    ],
    safepoint: Some(
        DeoptSafepoint {
            id: 0,
            lives: [
                LocalVariable(
                    InstID {
                        funcidx: FuncIdx(
                            6,
                        ),
                        bbidx: BBlockIdx(
                            0,
                        ),
                        iidx: InstIdx(
                            5,
                        ),
                    },
                ),
                LocalVariable(
                    InstID {
                        funcidx: FuncIdx(
                            6,
                        ),
                        bbidx: BBlockIdx(
                            0,
                        ),
                        iidx: InstIdx(
                            6,
                        ),
                    },
                ),
                LocalVariable(
                    InstID {
                        funcidx: FuncIdx(
                            6,
                        ),
                        bbidx: BBlockIdx(
                            1,
                        ),
                        iidx: InstIdx(
                            0,
                        ),
                    },
                ),
            ],
        },
    ),
}
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] "@@ process_block inst - {:?}" = "@@ process_block inst - {:?}"
[ykrt/src/compile/jitc_yk/trace_builder.rs:205:13] inst = Br {
    succ: BBlockIdx(
        11,
    ),
}
3: 2
yk-jit-event: enter-jit-code
2: 2
1: 2
yk-jit-event: deoptimise

test lang_tests::yk_outline_dynamic_with_promote.c ... [0m[32mok[0m

test result: [0m[32mok[0m. 1 passed; 0 failed; 0 ignored; 0 measured; 155 filtered out

[1m[32m     Running[0m langtest_ir_lowering.rs (target/debug/deps/ir_lowering_tests-b4974165f135b655)
Running IR lowering tests...

running 0 tests

test result: [0m[32mok[0m. 0 passed; 0 failed; 0 ignored; 0 measured; 15 filtered out

[1m[32m     Running[0m unittests src/main.rs (target/debug/deps/xtask-5713c88996ded3cf)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

[1m[32m     Running[0m unittests src/lib.rs (target/debug/deps/ykaddr-9c6e02fdc86095e5)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 7 filtered out; finished in 0.00s

[1m[32m     Running[0m unittests src/lib.rs (target/debug/deps/ykbuild-94178c447ccce7eb)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

[1m[32m     Running[0m unittests src/lib.rs (target/debug/deps/ykcapi-f9c0c641ef30d19f)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

[1m[32m     Running[0m unittests src/lib.rs (target/debug/deps/ykrt-edefbdce329d2588)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 257 filtered out; finished in 0.00s

[1m[32m     Running[0m unittests src/lib.rs (target/debug/deps/yksmp-6b12a6c992757043)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

Shared connection to bencher16.soft-dev.org closed.
